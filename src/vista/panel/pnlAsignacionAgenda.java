/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package vista.panel;

import java.awt.HeadlessException;
import java.awt.event.ActionListener;
import java.io.FileNotFoundException;
import java.io.IOException;
import java.text.DateFormat;
import java.text.SimpleDateFormat;
import java.util.Date;
import java.util.ArrayList;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JButton;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import modelo.Agenda;
import modelo.AgendaDAO;
import modelo.Profesional;
import modelo.ProfesionalDAO;

public class pnlAsignacionAgenda extends javax.swing.JPanel {

    /**
     * Creates new form pnlAsignacionAgenda
     */
    public pnlAsignacionAgenda() {
        initComponents();
         cargarNomProf();
         java.util.Date fecha = new Date();
         jdtFechaDia.setDate(fecha);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup1 = new javax.swing.ButtonGroup();
        jScrollPane1 = new javax.swing.JScrollPane();
        jtAgencias = new javax.swing.JTable();
        jpTurnos = new javax.swing.JPanel();
        cmbProfesional_nombre = new javax.swing.JComboBox<>();
        jLabel1 = new javax.swing.JLabel();
        jdtFechaDia = new com.toedter.calendar.JDateChooser();
        jLabel2 = new javax.swing.JLabel();
        RDCompleta = new javax.swing.JRadioButton();
        RDMedioDia = new javax.swing.JRadioButton();
        RDTarde = new javax.swing.JRadioButton();
        btnRegistrar = new javax.swing.JButton();
        btnMostrarAgenda = new javax.swing.JButton();

        setBackground(new java.awt.Color(255, 255, 255));

        jtAgencias.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Dia", "Hora", "Recervado", "Rut Profesional"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.Boolean.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, true, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(jtAgencias);

        jpTurnos.setBackground(new java.awt.Color(255, 255, 255));
        jpTurnos.setBorder(javax.swing.BorderFactory.createTitledBorder("Asignacion de Hora"));

        jLabel1.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(0, 0, 255));
        jLabel1.setText("Profesional");

        jdtFechaDia.setBackground(new java.awt.Color(204, 204, 255));
        jdtFechaDia.setForeground(new java.awt.Color(204, 204, 255));

        jLabel2.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(0, 0, 255));
        jLabel2.setText("Fecha");

        buttonGroup1.add(RDCompleta);
        RDCompleta.setSelected(true);
        RDCompleta.setText("Completa");
        RDCompleta.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                RDCompletaActionPerformed(evt);
            }
        });

        buttonGroup1.add(RDMedioDia);
        RDMedioDia.setText("Medio Dia");

        buttonGroup1.add(RDTarde);
        RDTarde.setText("Tarde");

        btnRegistrar.setText("Registrar");
        btnRegistrar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRegistrarActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jpTurnosLayout = new javax.swing.GroupLayout(jpTurnos);
        jpTurnos.setLayout(jpTurnosLayout);
        jpTurnosLayout.setHorizontalGroup(
            jpTurnosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jpTurnosLayout.createSequentialGroup()
                .addGap(33, 33, 33)
                .addGroup(jpTurnosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 69, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 57, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jpTurnosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(cmbProfesional_nombre, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jdtFechaDia, javax.swing.GroupLayout.DEFAULT_SIZE, 171, Short.MAX_VALUE))
                .addGap(40, 40, 40)
                .addGroup(jpTurnosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jpTurnosLayout.createSequentialGroup()
                        .addGroup(jpTurnosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(RDMedioDia)
                            .addComponent(RDCompleta))
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jpTurnosLayout.createSequentialGroup()
                        .addComponent(RDTarde)
                        .addGap(30, 30, 30))))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jpTurnosLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(btnRegistrar, javax.swing.GroupLayout.PREFERRED_SIZE, 116, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(44, 44, 44))
        );
        jpTurnosLayout.setVerticalGroup(
            jpTurnosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jpTurnosLayout.createSequentialGroup()
                .addGroup(jpTurnosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jpTurnosLayout.createSequentialGroup()
                        .addGap(38, 38, 38)
                        .addGroup(jpTurnosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jdtFechaDia, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(jpTurnosLayout.createSequentialGroup()
                        .addGap(24, 24, 24)
                        .addComponent(RDCompleta)
                        .addGap(18, 18, 18)
                        .addComponent(RDMedioDia)))
                .addGroup(jpTurnosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jpTurnosLayout.createSequentialGroup()
                        .addGap(27, 27, 27)
                        .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGap(162, 162, 162))
                    .addGroup(jpTurnosLayout.createSequentialGroup()
                        .addGroup(jpTurnosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jpTurnosLayout.createSequentialGroup()
                                .addGap(18, 18, 18)
                                .addComponent(RDTarde))
                            .addGroup(jpTurnosLayout.createSequentialGroup()
                                .addGap(9, 9, 9)
                                .addComponent(cmbProfesional_nombre, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(36, 36, 36)
                        .addComponent(btnRegistrar, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
        );

        btnMostrarAgenda.setText("Mostrar Agenda");
        btnMostrarAgenda.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnMostrarAgendaActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(24, 24, 24)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 783, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jpTurnos, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(205, 205, 205)
                        .addComponent(btnMostrarAgenda, javax.swing.GroupLayout.PREFERRED_SIZE, 144, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(49, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(49, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jpTurnos, javax.swing.GroupLayout.PREFERRED_SIZE, 235, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGap(191, 191, 191)
                        .addComponent(btnMostrarAgenda, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 253, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
    }// </editor-fold>//GEN-END:initComponents

    private void RDCompletaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_RDCompletaActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_RDCompletaActionPerformed

    private void btnRegistrarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRegistrarActionPerformed
        DateFormat dateFormat = new SimpleDateFormat("dd/MM/yyyy");

        String [] horaCompleta = {"10:00","11:45","13:30","14:15","15:00","16:45"};
        String [] horaMedioDia = {"10:00","11:45","13:30"};
        String [] horaTarde = {"14:15","15:00","16:45"};
        
        int reservado=0;
        String rut_apoderado=cmbProfesional_nombre.getSelectedItem().toString();
        Date fecha=jdtFechaDia.getDate();
        
        Agenda age = new Agenda();
        AgendaDAO ageDAO = new AgendaDAO();
        
        if (RDCompleta.isSelected())
        {
            for (int i = 0; i < horaCompleta.length; i++)
            {
                  try {
                        age.setFecha(fecha);
                }catch(Exception ex){
                    Logger.getLogger(pnlAsignacionAgenda.class.getName()).log(Level.SEVERE, null, ex);
                }       
               
                try {
                   
                    age.setHora(horaCompleta[i]);
                    age.setProfesional_rut(rut_apoderado);
                    age.setReservado(reservado);
                }catch(ExceptionInInitializerError ex ){
                    Logger.getLogger(pnlAsignacionAgenda.class.getName()).log(Level.SEVERE, null, ex);
                }
                try {
                    
                    
                    if (ageDAO.VerificarTurno(dateFormat.format(fecha), horaCompleta[i], rut_apoderado)==null) {
                        
                        System.out.println("");
                        if (ageDAO.ingresarAgenda(age,rut_apoderado))
                        {
                            
                            
                            
                            System.out.println("Orden ingresada");
                            if ((horaCompleta.length-1)==i)
                            {
                                
                                
                                JOptionPane.showMessageDialog(this,"Agenda ingresada");
                                
                                
                            }
                        }
                        else
                        {
                            
                            
                            JOptionPane.showMessageDialog(this,"Hubo problemas....");
                            System.out.println("Hubo problemas....");
                        }
                        
                        
                        
                    }
                    else
                    {
                        if ((horaCompleta.length-1)==i)
                        {
                            
                            
                            JOptionPane.showMessageDialog(this,"Ya se Encuentra Ingresada");
                            
                            
                        }
                    }

                } catch (HeadlessException | ClassNotFoundException e) {
                    
                    
                    Logger.getLogger(pnlAsignacionAgenda.class.getName()).log(Level.SEVERE, null, e);
                }
            }
        }
        else if (RDMedioDia.isSelected())
        {
            for (int i = 0; i < horaMedioDia.length; i++)
            {
                age.setFecha(fecha);
                age.setHora(horaMedioDia[i]);
                age.setProfesional_rut(rut_apoderado);
                age.setReservado(reservado);

                try {
                    if (ageDAO.VerificarTurno(dateFormat.format(fecha), horaMedioDia[i], rut_apoderado)==null) {
                        if (ageDAO.ingresarAgenda(age,rut_apoderado))
                        {
                            System.out.println("Orden ingresada");
                            if ((horaMedioDia.length-1)==i)
                            {
                                JOptionPane.showMessageDialog(this,"Agenda ingresada");
                            }
                        }
                        else
                        {
                            JOptionPane.showMessageDialog(this,"Hubo problemas....");
                            System.out.println("Hubo problemas....");
                        }
                    }
                    else
                    {

                        if ((horaMedioDia.length-1)==i)
                        {
                            JOptionPane.showMessageDialog(this,"Ya se Encuentra Ingresada");
                        }
                    }

                } catch (HeadlessException | ClassNotFoundException e) {
                    Logger.getLogger(pnlAsignacionAgenda.class.getName()).log(Level.SEVERE, null, e);
                }
            }
        }
        else if (RDTarde.isSelected())
        {
            for (int i = 0; i < horaTarde.length; i++)
            {
                age.setFecha(fecha);
                age.setHora(horaTarde[i]);
                age.setProfesional_rut(rut_apoderado);
                age.setReservado(reservado);

                try {
                    if (ageDAO.VerificarTurno(dateFormat.format(fecha), horaTarde[i], rut_apoderado)==null) {
                        if (ageDAO.ingresarAgenda(age,rut_apoderado))
                        {
                            System.out.println("Orden ingresada");
                            if ((horaTarde.length-1)==i)
                            {
                                JOptionPane.showMessageDialog(this,"Agenda ingresada");
                            }
                        }
                        else
                        {
                            JOptionPane.showMessageDialog(this,"Hubo problemas....");
                            System.out.println("Hubo problemas....");
                        }
                    }
                    else
                    {

                        if ((horaTarde.length-1)==i)
                        {
                            JOptionPane.showMessageDialog(this,"Ya se Encuentra Ingresada");
                        }
                    }

                } catch (HeadlessException | ClassNotFoundException e) {
                    Logger.getLogger(pnlAsignacionAgenda.class.getName()).log(Level.SEVERE, null, e);
                }
            }
        }

    }//GEN-LAST:event_btnRegistrarActionPerformed

    private void btnMostrarAgendaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnMostrarAgendaActionPerformed
        eliminar();
        AgendaDAO ageDao=new AgendaDAO();

        ArrayList<Agenda>age=ageDao.buscarTurno();

        DefaultTableModel model = (DefaultTableModel) jtAgencias.getModel();
        for (int i = 0; i < age.size(); i++) {

            Date dia = age.get(i).getFecha();
            String hora= age.get(i).getHora();
            int reservo=age.get(i).getReservado();
            String profesional= age.get(i).getProfesional_rut();

            boolean tf= false;
            if (reservo==1)
            {
                tf=true;
            }
            if (reservo!=1)
            {

                Object[] row = {dia,hora,tf,profesional};
                model.addRow(row);
            }
        }
    }//GEN-LAST:event_btnMostrarAgendaActionPerformed
public void cargarNomProf(){
        ProfesionalDAO profDao=new ProfesionalDAO();
        
        ArrayList<Profesional>prof=profDao.buscarNomProf();

            for (int i = 0; i < prof.size(); i++) {

                    String p_nombre=prof.get(i).getNombre();                  
                    String p_apellido=prof.get(i).getP_apellido();  
                    String s_apellido=prof.get(i).getS_apellido();  
                    
                    String fullname=p_nombre+" "+p_apellido+" "+s_apellido;
                    
                    cmbProfesional_nombre.addItem(fullname); 
    
         }    
        
    }
     public void eliminar(){
        DefaultTableModel tb = (DefaultTableModel) jtAgencias.getModel();
        int a = jtAgencias.getRowCount()-1;
        for (int i = a; i >= 0; i--) {           
        tb.removeRow(tb.getRowCount()-1);
        } 
       
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JRadioButton RDCompleta;
    private javax.swing.JRadioButton RDMedioDia;
    private javax.swing.JRadioButton RDTarde;
    private javax.swing.JButton btnMostrarAgenda;
    private javax.swing.JButton btnRegistrar;
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.JComboBox<String> cmbProfesional_nombre;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JScrollPane jScrollPane1;
    private com.toedter.calendar.JDateChooser jdtFechaDia;
    private javax.swing.JPanel jpTurnos;
    private javax.swing.JTable jtAgencias;
    // End of variables declaration//GEN-END:variables
}
